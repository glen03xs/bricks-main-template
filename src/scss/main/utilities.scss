/**************
 Utility 
***************/
:root {
  --t--text-alt-color: var(--tertiary);
}

.t--hide {
  display: none;
}

.t--font-custom-one {
  font-family: var(--font-custom-1);
}

.t--font-custom-two {
  font-family: var(--font-custom-2);
}

// BG Color
.t--bg--white {
  background-color: #ffffff;
}
.t--bg--gray-light {
  background-color: var(--bg-light-gray);
}
.t--bg--gray-medium {
  background-color: var(--bg-medium-gray);
}
.t--bg--gray {
  background-color: var(--bg-gray);
}
.t--bg--gray-dark {
  background-color: var(--bg-dark-gray);
}
.t--bg--black {
  background-color: var(--bg-black);
}
.t--bg--primary {
  background-color: var(--primary);
}
.t--bg--primary-light {
  background-color: var(--primary-light);
}
.t--bg--primary-medium {
  background-color: var(--primary-medium);
}
.t--bg--secondary {
  background-color: var(--secondary);
}
.t--bg--secondary-light {
  background-color: var(--secondary-light);
}
.t--bg--secondary-medium {
  background-color: var(--secondary-medium);
}
.t--bg--custom-one {
  background-color: var(--bg-custom-1);
}

// Font Color
.t--text-color--light {
  color: var(--text-light) !important;

  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  span,
  li,
  cite {
    color: var(--text-light) !important;
  }
}

.t--text-color--primary {
  color: var(--primary);

  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  span,
  li,
  cite {
    color: var(--primary);
  }
}

.t--text-color--secondary {
  color: var(--secondary);

  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  span,
  li,
  cite {
    color: var(--secondary);
  }
}

.t--text-color--tertiary {
  color: var(--tertiary);

  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  span,
  li,
  cite {
    color: var(--tertiary);
  }
}

// Link Color
.t--link-color--light {
  color: var(--text-light);

  a {
    color: var(--text-light);
  }
}

.t--link-color--primary {
  color: var(--primary);

  a {
    color: var(--primary);
  }
}

.t--link-color--secondary {
  color: var(--secondary);

  a {
    color: var(--secondary);
  }
}

.t--link-color--tertiary {
  color: var(--tertiary);

  a {
    color: var(--tertiary);
  }
}

// Icon Color
.t--icons--light {
  i {
    color: var(--text-light);
  }
}

.t--icons--primary {
  i {
    color: var(--primary);
  }
}

.t--icons--secondary {
  i {
    color: var(--secondary);
  }
}

.t--icons--tertiary {
  i {
    color: var(--tertiary);
  }
}

// Text Alignment
.t--text-align--left {
  text-align: left;
}

.t--text-align--center {
  text-align: center;
}

.t--text-align--right {
  text-align: right;
}

.t--reset-blockquote {
  padding: 0;
  border-left: 0;
  margin: 0;
}

.t--img-fhw {
  height: 100% !important; // Override <figure> tag class
  width: 100% !important;

  &.t--img-fhw__align-top {
    img {
      object-position: top;
    }
  }
  &.t--img-fhw__align-bottom {
    img {
      object-position: bottom;
    }
  }
  &.t--img-fhw__align-left {
    img {
      object-position: left;
    }
  }
  &.t--img-fhw__align-right {
    img {
      object-position: right;
    }
  }

  img {
    height: 100%;
    width: 100%;
    object-fit: cover;
    aspect-ratio: 16 / 9;
  }
}

.t--base-pd {
  padding: var(--space-3xl) 0;
}

.t--base-no-pd-t {
  padding: 0 0 var(--space-3xl);
}

.t--base-no-pd-t--on-tab-no {
  padding: 0 0 var(--space-3xl);
}

.t--base-no-pd-b {
  padding: var(--space-3xl) 0 0;
}

.t--base-no-pd-b--on-tab-yes-tb {
  padding: var(--space-3xl) 0 0;
}

.t--base-card-pd {
  padding: var(--space-xs);
}

.t--base-card-pd-m {
  padding: var(--space-m);
}

.t--flex-wrap-y {
  flex-wrap: wrap;
}

.t--flex-wrap-n {
  flex-wrap: nowrap;
}

.t--flex--align-center {
  display: flex;
  align-items: center;
}

.t-flex--al-ju-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.p-relative {
  position: relative;
}

.p-absolute {
  position: absolute;

  &.p-align-right {
    right: 0;
  }

  &.p-align-center {
    left: 50%;
    transform: translateX(-50%);
  }

  &.p-align-right {
    right: 0;
  }

  &.p-align-top {
    top: 0;
  }
}

// Max width - Computed .t--mxw-1000px
@mixin generate-max-width-px($start, $end, $step) {
  $i: $start; // Initialize the loop variable
  @while $i <= $end {
    .t--mxw-#{$i}px {
      max-width: #{$i}px;
    }
    $i: $i + $step; // Increment by $step
  }
}

@include generate-max-width-px(200, 1100, 5);

// Width .t--w-92
@mixin generate-width-pct($start, $end, $step) {
  $i: $start; // Initialize the loop variable
  @while $i <= $end {
    .t--w-#{$i} {
      width: unquote($i + "%");
    }
    $i: $i + $step; // Increment by $step
  }
}

// Example usage of the mixin
@include generate-width-pct(50, 100, 2);

/****** Others *******/
.t--bg-parallax {
  background-repeat: no-repeat !important;
  background-attachment: fixed !important;
  background-size: cover !important;
}

.link-w-arrow:hover::after,
.link-w-chevron:hover::after {
  transform: translateX(6px);
}

.link-w-arrow::after {
  content: "\f061";
  font-family: "Font Awesome\ 6 Solid";
  margin-left: 8px;
  transition: all 0.3s ease-in-out;
}

.link-w-chevron::after {
  content: "\f054";
  font-family: "Font Awesome\ 6 Solid";
  margin-left: 8px;
  transition: all 0.3s ease-in-out;
}

/**************
Responsive
***************/

/******  Desktop 1200 | __on-xl *******/
@media (max-width: 1200px) {
  .t--hide__on-xl {
    display: none !important;
  }

  .t--show__on-xl {
    display: block !important;
  }

  // Max width - Computed
  @mixin generate-max-width-px__on-xl($start, $end, $step) {
    $i: $start; // Initialize the loop variable
    @while $i <= $end {
      .t--mxw-#{$i}px__on-xl {
        max-width: #{$i}px;
      }
      $i: $i + $step; // Increment by $step
    }
  }
  @include generate-max-width-px__on-xl(200, 1100, 5);

  // Width
  @mixin generate-width-pct__on-xl($start, $end, $step) {
    $i: $start; // Initialize the loop variable
    @while $i <= $end {
      .t--w-#{$i}__on-xl {
        width: unquote($i + "%");
      }
      $i: $i + $step; // Increment by $step
    }
  }
  @include generate-width-pct__on-xl(50, 100, 2);
}

  // Max Width - Static
  .t--mxw-100__on-xl {
    max-width: 100%;
  }

/******  Tablet 992 | __on-l *******/
@media (max-width: 992px) {
  .t--hide__on-l {
    display: none;
  }

  .t--show__on-l {
    display: block !important;
  }

  .t--base-no-pd-t--on-tab-no {
    padding: 0;
  }

  .t--base-no-pd-b--on-tab-yes-tb {
    padding: var(--space-3xl) 0;
  }

  .t--text-align--left__on-l {
    text-align: left;
  }
  
  .t--text-align--center__on-l {
    text-align: center;
  }
  
  .t--text-align--right__on-l {
    text-align: right;
  }

  // Max width - Computed
  @mixin generate-max-width-px__on-l($start, $end, $step) {
    $i: $start; // Initialize the loop variable
    @while $i <= $end {
      .t--mxw-#{$i}px__on-l {
        max-width: #{$i}px;
      }
      $i: $i + $step; // Increment by $step
    }
  }
  @include generate-max-width-px__on-l(200, 1100, 5);

  // Width - t--w-100__on-l
  @mixin generate-width-pct__on-l($start, $end, $step) {
    $i: $start; // Initialize the loop variable
    @while $i <= $end {
      .t--w-#{$i}__on-l {
        width: unquote($i + "%");
      }
      $i: $i + $step; // Increment by $step
    }
  }
  @include generate-width-pct__on-l(50, 100, 2);

  // Max Width - Static
  .t--mxw-100__on-l {
    max-width: 100%;
  }
}

/******  Tablet 767 | __on-m *******/
@media (max-width: 767px) {
  .t--hide__on-m {
    display: none;
  }

  .t--show__on-m {
    display: block !important;
  }

  .t--text-align--left__on-m {
    text-align: left;
  }
  
  .t--text-align--center__on-m {
    text-align: center;
  }
  
  .t--text-align--right__on-m {
    text-align: right;
  }

  // Max width - Computed
  @mixin generate-max-width-px__on-m($start, $end, $step) {
    $i: $start; // Initialize the loop variable
    @while $i <= $end {
      .t--mxw-#{$i}px__on-m {
        max-width: #{$i}px;
      }
      $i: $i + $step; // Increment by $step
    }
  }
  @include generate-max-width-px__on-m(200, 1100, 5);

  // Width
  @mixin generate-width-pct__on-m($start, $end, $step) {
    $i: $start; // Initialize the loop variable
    @while $i <= $end {
      .t--w-#{$i}__on-m {
        width: unquote($i + "%");
      }
      $i: $i + $step; // Increment by $step
    }
  }
  @include generate-width-pct__on-m(50, 100, 2);

    // Max Width - Static
    .t--mxw-100__on-m {
      max-width: 100%;
    }
}

/******  Mobile 440 | __on-s *******/
@media (max-width: 440px) {

  .t--hide__on-s {
    display: none;
  }

  .t--show__on-s {
    display: block !important;
  }

  // Max width - Computed
  @mixin generate-max-width-px__on-s($start, $end, $step) {
    $i: $start; // Initialize the loop variable
    @while $i <= $end {
      .t--mxw-#{$i}px__on-s {
        max-width: #{$i}px;
      }
      $i: $i + $step; // Increment by $step
    }
  }
  @include generate-max-width-px__on-s(200, 1100, 5);

  // Width
  @mixin generate-width-pct__on-s($start, $end, $step) {
    $i: $start; // Initialize the loop variable
    @while $i <= $end {
      .t--w-#{$i}__on-s {
        width: unquote($i + "%");
      }
      $i: $i + $step; // Increment by $step
    }
  }
  @include generate-width-pct__on-s(50, 100, 2);

    // Max Width - Static
    .t--mxw-100__on-s {
      max-width: 100%;
    }
}
